# .github/workflows/android-build.yml
name: Build APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # If package-lock.json exists use npm ci, otherwise use npm install
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            echo "Found package-lock.json → npm ci"
            npm ci
          else
            echo "No package-lock.json → npm install"
            npm install
          fi

      # Ensure Android platform for Capacitor matches core (v5 line)
      - name: Ensure Capacitor Android dependency
        run: |
          npx --yes npm@latest -v > /dev/null
          npm install --no-audit --no-fund @capacitor/android@5.7.8

      - name: Build React web assets
        run: npm run build

      # Always generate a clean native project on the runner
      - name: Add Android platform fresh
        run: |
          rm -rf android
          npx cap add android

      - name: Sync Capacitor
        run: npx cap sync android

      # Make sure the wrapper is executable
      - name: Ensure Gradle wrapper exec permission
        run: chmod +x android/gradlew

      # Force AndroidX flags in case the template misses them
      - name: Set AndroidX flags
        run: |
          echo "android.useAndroidX=true" >> android/gradle.properties
          echo "android.enableJetifier=true" >> android/gradle.properties

      - name: Build APK with Gradle
        run: cd android && ./gradlew assembleDebug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: android/app/build/outputs/apk/debug/app-debug.apk