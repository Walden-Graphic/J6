name: Build APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          # IMPORTANT: don't point to a non-existent lockfile to avoid the warning.
          # cache-dependency-path is omitted on purpose.

      - name: Show tool versions
        run: |
          node -v
          npm -v
          java -version

      # Lockfile-safe install: creates package-lock.json if missing, then installs.
      - name: Install dependencies (lockfile-safe)
        run: |
          set -e
          npm config set fund false
          npm config set audit false
          if [ -f package-lock.json ]; then
            echo "Lockfile present -> npm ci"
            npm ci || npm ci --legacy-peer-deps
          else
            echo "No lockfile -> generating one"
            npm install --package-lock-only
            npm ci || npm install --legacy-peer-deps
          fi

      # Make sure Capacitor CLI and Android platform are present and aligned
      - name: Ensure Capacitor CLI & Android
        run: |
          npm i -D @capacitor/cli@5.7.8
          npm i @capacitor/android@5.7.8

      - name: Build web assets
        run: npm run build

      # Recreate/sync native Android project from Capacitor every run (clean & consistent)
      - name: Recreate Android platform
        run: |
          rm -rf android
          npx cap add android
          npx cap sync android

      # Make sure AndroidX flags are set to satisfy AAR checks
      - name: Ensure AndroidX flags
        run: |
          echo "android.useAndroidX=true" >> android/gradle.properties
          echo "android.enableJetifier=true" >> android/gradle.properties

      - name: Make Gradle wrapper executable
        run: chmod +x android/gradlew

      - name: Build APK (debug)
        run: cd android && ./gradlew assembleDebug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error